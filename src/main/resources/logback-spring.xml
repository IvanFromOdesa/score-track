<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <property name="LOGS" value="./logs" />
    <property name="ASYNC_UNHANDLED" value="${LOGS}/async/ex" />
    <property name="SYSTEM_LOGS" value="${LOGS}/system" />
    <property name="NBA_API" value="${LOGS}/nba-api-update" />

    <property name="BASE_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n%throwable" />

    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>
                %black(%d{ISO8601}) %highlight(%-5level) [%blue(%t)] : %msg%n%throwable
            </Pattern>
        </layout>
    </appender>

    <appender name="rolling-file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOGS}/all-logs.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>%d %p [%t] %m%n</Pattern>
        </encoder>

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily and when the file reaches 10 MegaBytes -->
            <fileNamePattern>${LOGS}/archived/all-logs-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <appender name="api-nba-logging-teams" class="ch.qos.logback.core.FileAppender">
        <file>${NBA_API}/teams/teams.log</file>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>${BASE_PATTERN}</Pattern>
        </layout>
    </appender>

    <appender name="api-nba-logging-players" class="ch.qos.logback.core.FileAppender">
        <file>${NBA_API}/players/players.log</file>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>${BASE_PATTERN}</Pattern>
        </layout>
    </appender>

    <appender name="async-unhandled-ex" class="ch.qos.logback.core.FileAppender">
        <file>${ASYNC_UNHANDLED}/ex.log</file>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>${BASE_PATTERN}</Pattern>
        </layout>
    </appender>

    <appender name="system-all-logs" class="ch.qos.logback.core.FileAppender">
        <file>${SYSTEM_LOGS}/all.log</file>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>${BASE_PATTERN}</Pattern>
        </layout>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${SYSTEM_LOGS}/archived/all-logs-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>10MB</maxFileSize>
                <times>48</times>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <!-- LOG everything at INFO level -->
    <root level="info">
        <appender-ref ref="rolling-file" />
        <appender-ref ref="console" />
    </root>

    <logger name="com.teamk.scoretrack.module.core.api.nbaapi.entities.team.service.scheduler.TeamSchedulerService" additivity="false" level="info">
        <appender-ref ref="api-nba-logging-teams" />
    </logger>

    <logger name="com.teamk.scoretrack.module.core.api.nbaapi.entities.player.service.scheduler.PlayerSchedulerService" additivity="false" level="info">
        <appender-ref ref="api-nba-logging-players" />
    </logger>

    <logger name="com.teamk.scoretrack.module.commons.async.AsyncPropagatedExceptionHandler" additivity="false" level="info">
        <appender-ref ref="async-unhandled-ex" />
    </logger>

    <logger name="com.teamk.scoretrack.module.commons.util.log.MessageLogger" additivity="false" level="info">
        <appender-ref ref="system-all-logs" />
    </logger>
</configuration>